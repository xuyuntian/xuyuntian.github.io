{"title":"反转链表","date":"2021-03-04T09:34:00.000Z","date_formatted":{"ll":"Mar 4, 2021","L":"03/04/2021","MM-DD":"03-04"},"link":"2021/03/04/xuyuntian/算法相关/策略/reverse_list","tags":["链表"],"categories":["算法"],"updated":"2021-03-04T09:34:38.349Z","content":"<h1 id=\"反转链表\">反转链表<a title=\"#反转链表\" href=\"#反转链表\"></a></h1>\n<p>反转链表写过不少次，但是每次重新写，自己都要思考，所以自己又写了一遍。但这次要把它<strong>缓存</strong>在脑中。<br>\n给出一个节点的类：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static class Node&#123;</span><br><span class=\"line\">    int val;</span><br><span class=\"line\">    Node next;</span><br><span class=\"line\">    Node(int val)&#123;this.val &#x3D; val;&#125;</span><br><span class=\"line\">    Node()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>反转链表的方法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static Node reverseNode(Node head)&#123;</span><br><span class=\"line\">    Node p &#x3D; null;</span><br><span class=\"line\">    Node q &#x3D; head;</span><br><span class=\"line\">    Node temp &#x3D; null;</span><br><span class=\"line\">    while(q!&#x3D;null)&#123;</span><br><span class=\"line\">        &#x2F;&#x2F;------start----</span><br><span class=\"line\">        temp &#x3D; q.next;</span><br><span class=\"line\">        q.next &#x3D; p;</span><br><span class=\"line\">        &#x2F;&#x2F;-----end----</span><br><span class=\"line\">        p &#x3D; q;</span><br><span class=\"line\">        if(temp &#x3D;&#x3D; null) break;</span><br><span class=\"line\">        q &#x3D; temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return q;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"imgs/xuyuntian/alg/reverse_list.png\" alt=\"\" class=\"φcx\"></p>\n<p>图片上记录了反转链表时，进入while方法，执行语句块start到end后,p,q,temp的状态.</p>\n<ul>\n<li>p: 记录前一个节点</li>\n<li>q: 记录当前节点</li>\n<li>temp: 记录当前节点的下个节点(q.next指针将会指向p,所以要保存起来)</li>\n</ul>\n<blockquote>\n<p>反转链表不难，但是要注意细节，特别是temp== null是，要直接退出循环,否则最终结果 p = temp(null)会返回null</p>\n</blockquote>\n","next":{"title":"279. Perfect Squares","link":"2021/03/02/xuyuntian/算法相关/leetcode/leetcode_279"},"plink":"http://example.com/2021/03/04/xuyuntian/算法相关/策略/reverse_list/","toc":[{"id":"反转链表","title":"反转链表","index":"1"}]}